{"mappings":"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","sources":["public/timer.js"],"sourcesContent":["//Stopwatch Code\nvar workingTime = document.getElementById(\"workingTime\").value;\nvar shortBreakTime = document.getElementById(\"shortBreakTime\").value;\nvar longBreakTime = document.getElementById(\"longBreakTime\").value;\nvar repeating = document.getElementById(\"repeating\").value;\n\nvar seconds = 00;\nvar minutes = 10;\nvar hours = 00;\n\nvar appendSeconds = document.getElementById('seconds');\nvar appendMinutes = document.getElementById('minutes');\nvar appendHours = document.getElementById('hours');\n\nvar buttonStart = document.getElementById('button-start');\nvar buttonStop = document.getElementById('button-stop');\nvar buttonReset = document.getElementById('button-reset');\n\nvar buttonStartPomo = document.getElementById('button-start-pomo');\nvar setPomoTime = document.getElementById('set-01:02:03');\n\nvar timeFinished;\n\nvar interval; \n\n//Start button click\nfunction startStopwatch() {\n    seconds++\n    if (seconds <= 9) {\n        appendSeconds.innerHTML = \"0\" + seconds;\n    }  \n  \n    if (seconds > 9) {\n        appendSeconds.innerHTML = seconds;\n    } \n  \n    if (seconds > 59) {\n        minutes++\n        appendMinutes.innerHTML = \"0\" + minutes;\n        seconds = 0;\n        appendSeconds.innerHTML = \"0\" + 0;;\n    }\n  \n    if (minutes > 9) {\n        appendMinutes.innerHTML = minutes;\n    }\n\n  if (minutes > 59) {\n    hours++\n    appendHours.innerHTML = \"0\" + hours;\n    minutes = 0;\n    appendMinutes.innerHTML = \"0\" + 0;;\n  }\n}\n\n    buttonStart.onclick = function(){\n        if(interval) {\n            clearInterval(interval);}\n\n        interval = setInterval(startStopwatch, 10); \n    }\n   \n    buttonStop.onclick = function(){\n        clearInterval(interval);\n    }\n\n    buttonReset.onclick = function (){\n        clearInterval(interval)\n        seconds = \"00\";  \n        minutes = \"00\";\n        hours = \"00\";\n        \n        appendSeconds.innerHTML = seconds;\n        appendMinutes.innerHTML = minutes;\n        appendHours.innerHTML = hours;\n    }\n\n    //Pomodoro Code\n\nvar startPauseText = document.getElementById(\"startPauseText\");\nvar countdown = document.getElementById(\"countdown\");\nvar title = document.getElementById(\"title\");\nvar sessionLength = document.getElementById(\"sessionLength\");\nvar breakLength = document.getElementById(\"breakLength\");\n\nvar timerType; //possible values = session, break (default is session)\nvar id;\nvar initialSessionTime;\nvar initialBreakTime;\n\n//initial display value of 25 minutes, type = session\nwindow.onload = function(){\n  countdown.textContent = \"25:00\";\n  sessionLength.textContent = \"25\";\n  initialSessionTime = countdown.textContent;\n\n  breakLength.textContent = \"10\";\n  initialBreakTime = \"10:00\";\n\n  startPauseText.innerHTML = \"Start\"\n  timerType = \"session\";\n  loadType();\n};\n\nfunction fullReset(){\n  timerType = \"session\";\n  loadType();\n  resetTimer();\n}\n\nfunction resetTimer(){\n  pauseTimer();\n  if(timerType === \"session\"){\n    countdown.textContent = initialSessionTime;\n  }\n  if(timerType === \"break\"){\n    countdown.textContent = initialBreakTime;\n  }\n}\n\nfunction loadType(){\n  var main = document.getElementById(\"main\");\n  if(timerType === \"session\"){\n    main.className = \"session-mode\";\n    title.textContent = \"Session\";\n  }\n  if(timerType === \"break\"){\n    main.className += \" break-mode\";\n    title.innerHTML = \"Break\";\n  }\n}\n\n\nfunction startTimer(duration) {\n  startPauseText.innerHTML = \"Pause\";\n  countdown.innerHTML = convertToString(duration);\n  duration = duration - 1;\n  id = setTimeout(function () {\n      startTimer(duration);\n  }, 10);\n  if(timerType === \"session\" && (countdown.textContent === \"00:00\")){\n    setTimeout(function(){\n      pauseTimer();\n      timerType = \"break\";\n      loadType();\n      countdown.textContent = initialBreakTime;\n      var breaktime = convertToTime(countdown.textContent);\n      startTimer(breaktime);\n    }, 10);\n  }\n  if(timerType === \"break\" && (countdown.textContent === \"00:00\")){\n    fullReset();\n  }\n}\n\nfunction pauseTimer() {\n  startPauseText.textContent = \"Start\";\n  clearTimeout(id);\n}\n\n\n//~~~~~~BUTTON EVENT LISTENERS~~~~~~~\n\nvar startPauseButton = document.getElementById(\"startPause\");\nstartPauseButton.addEventListener(\"click\", function(){\n  handleStartPause();\n});\n\nvar resetButton = document.getElementById(\"reset\");\nresetButton.addEventListener(\"click\", function(){\n  if(timerType === \"break\"){\n    countdown.innerHTML = initialSessionTime;\n    timerType = \"session\";\n  }\n  resetTimer();\n  loadType();\n});\n\n//multiple return statements less than ideal, but unsure how to handle this otherwise\nfunction handleStartPause(){\n  var duration = convertToTime(countdown.innerHTML);\n  if(startPauseText.textContent === \"Start\"){\n    startTimer(duration);\n    return;\n  }\n  if(startPauseText.textContent === \"Pause\"){\n    pauseTimer();\n    return;\n  }\n}\n\n\n\n//~~~~~~ADJUSTOR EVENT LISTENERS~~~~~~\n\nvar sessionPlus = document.getElementById(\"sessionPlus\");\nsessionPlus.addEventListener(\"click\", function(){\n  incrementTime(initialSessionTime, \"session\", sessionLength);\n});\n\nvar sessionMinus = document.getElementById(\"sessionMinus\");\nsessionMinus.addEventListener(\"click\", function(){\n  if(convertToTime(initialSessionTime) >= 61){\n    decrementTime(initialSessionTime, \"session\", sessionLength);\n  } else {\n    return;\n  }\n});\n\nvar breakPlus = document.getElementById(\"breakPlus\");\nbreakPlus.addEventListener(\"click\", function(){\n  incrementTime(initialBreakTime, \"break\", breakLength);\n});\n\nvar breakMinus = document.getElementById(\"breakMinus\");\nbreakMinus.addEventListener(\"click\", function(){\n  if(convertToTime(initialBreakTime) >= 61){\n    decrementTime(initialBreakTime, \"break\", breakLength);\n  } else {\n    return;\n  }\n});\n\n//~~~~~~~~ HELPER FUNCTIONS ~~~~~~~~~\n\n//increment and decrement functions:\n//parameters: 1) initialVal -- (initialBreakTime or initialSessionTime)\n//            2) typeOfTimer -- current type of timer as a string (\"break\" or \"session\")\n//            3) nodeToUpdate -- which time length node to update with new time value (breakLength or sessionLength)\nfunction decrementTime(initialVal, typeOfTimer, nodeToUpdate){\n  resetTimer();\n  var currentValue = convertToTime(initialVal);\n  currentValue -= 60;\n  initialVal = convertToString(currentValue);\n  if(timerType === typeOfTimer){\n    countdown.innerHTML = initialVal;\n  }\n  if(initialVal.charAt(0) !== \"0\"){\n    nodeToUpdate.textContent = initialVal.substring(0,2);\n  } else {\n    nodeToUpdate.textContent = initialVal.substring(1,2);\n  }\n  if(typeOfTimer === \"break\"){\n    initialBreakTime = initialVal;\n  } else {\n    initialSessionTime = initialVal;\n  }\n}\n\nfunction incrementTime(initialVal, typeOfTimer, nodeToUpdate){\n  resetTimer();\n  var currentValue = convertToTime(initialVal);\n  currentValue += 60;\n  initialVal = convertToString(currentValue);\n  if(timerType === typeOfTimer){\n    countdown.innerHTML = initialVal;\n  }\n  if(initialVal.charAt(0) !== \"0\"){\n    nodeToUpdate.textContent = initialVal.substring(0,2);\n  } else {\n    nodeToUpdate.textContent = initialVal.substring(1,2);\n  }\n  if(typeOfTimer === \"break\"){\n    initialBreakTime = initialVal;\n  } else {\n    initialSessionTime = initialVal;\n  }\n}\n\n//input string is of the format xx : yy, returns duration in seconds\nfunction convertToTime(str){\n  var minutes = str.substring(0, 2);\n  var seconds = str.substring(3, 5);\n  var min = parseInt(minutes);\n  var sec = parseInt(seconds);\n  var duration = (min*60) + sec;\n  return duration;\n}\n//input number of seconds and convert that to a string formatted mm:ss\nfunction convertToString(seconds){\n  var min, sec;\n  min = Math.floor(seconds / 60);\n  sec = seconds % 60;\n  min = min < 10 ? \"0\" + min : min;\n  sec = sec < 10 ? \"0\" + sec : sec; //if seconds < 10, add a 0 before (i.e. display 2:01 rather than 2:1);\n  return min + \":\" + sec;\n}\n"],"names":[],"version":3,"file":"timer.f565f920.js.map","sourceRoot":"/__parcel_source_root/"}